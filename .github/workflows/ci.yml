name: ci
on:
  push:
    branches: [ main, stable ]
    tags:
      - 'v*'
    paths-ignore:
      - docs/**
      - README.md
      - CHANGELOG.md

  pull_request:
    branches: [ main, stable ]
    paths-ignore:
      - docs/**
      - README.md
      - CHANGELOG.md

env:
  MINIMAL_RUST_VERSION: 1.85.0

jobs:
  rust_fmt:
    runs-on: ubuntu-latest
    name: Rust Linter
    steps:
      - uses: actions/checkout@v4
      - name: Check code
        run: cargo fmt --all -- --check

  check_tag:
    runs-on: ubuntu-latest
    name: Check tag
    steps:
      - uses: actions/checkout@v4
      - name: Check tag
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          cargo install cargo-get
          for PKG_NAME in reduct_base reduct_macros reductstore; do
            if [ "v$(cargo get package.version --entry $PKG_NAME/)" != "${GITHUB_REF#refs/*/}" ]; then
              echo "Tag does not match version in $PKG_NAME/Cargo.toml"
              exit 1
            fi
          done
          
  build_binaries:
    name: Build Binaries
    runs-on: ${{ matrix.os }}
    needs:
      - rust_fmt
    strategy:
      matrix:
        target: [ "x86_64-unknown-linux-gnu", "x86_64-pc-windows-gnu", "x86_64-apple-darwin" ]
        include:
          - target: "x86_64-unknown-linux-gnu"
            os: ubuntu-24.04
            compiler: "gcc"
            artifact: "libtest_ext.so"
          - target: "x86_64-pc-windows-gnu"
            os: ubuntu-24.04
            compiler: "gcc-mingw-w64-x86-64"
            artifact: "test_ext.dll"
          - target: "x86_64-apple-darwin"
            os: macos-13
            compiler: "gcc"
            artifact: "libtest_ext.dylib"


    steps:
      - uses: actions/checkout@v4
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ env.MINIMAL_RUST_VERSION }}

      - name: Install toolchain
        run: rustup target add ${{ matrix.target }}

      - name: Install gcc
        if: ${{ matrix.os == 'ubuntu-24.04' }}
        run: |
          sudo apt-get update
          sudo apt-get install -y ${{ matrix.compiler }}

      - name: Install gcc
        if: ${{ matrix.os == 'macos-latest' }}
        run: |
          brew install ${{ matrix.compiler }}

      - name: Build binary
        run: cargo build --release --target ${{ matrix.target }} && ls target/${{ matrix.target }}/release

      - name: Upload binary
        uses: actions/upload-artifact@v4
        with:
          name: extension-${{ matrix.target }}
          path: target/${{matrix.target}}/release/${{ matrix.artifact }}


  make_release:
    runs-on: ubuntu-latest
    needs:
      - build_binaries
      - check_tag
    name: Make release
    if: ${{ startsWith(github.event.ref, 'refs/tags/v') }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/create-release@v1
        id: create_release
        with:
          draft: true
          prerelease: false
          release_name: Release ${{ steps.version.outputs.version }}
          tag_name: ${{ github.ref }}
          body: Copy changes from CHANGELOG.md
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Download Linux artifact
        uses: actions/download-artifact@v4
        with:
          name: extension-x86_64-unknown-linux-gnu
          path: /tmp/

      - name: Upload Linux artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: /tmp/libtext_ext.so
          asset_name: libtext_ext-x86_64-unknown-linux-gnu.so
          asset_content_type: application/x-sharedlib

      - name: Download Macos artifact
        uses: actions/download-artifact@v4
        with:
          name: extension-x86_64-apple-darwin
          path: /tmp/

      - name: Upload MacOs artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: /tmp/libtext_ext.dylib
          asset_name: libtext_ext-x86_64-apple-darwin.dylib
          asset_content_type: application/x-sharedlib

      - name: Download Windows artifact
        uses: actions/download-artifact@v4
        with:
          name: extension-x86_64-pc-windows-gnu
          path: /tmp/

      - name: Upload Windows artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: /tmp/libtext_ext.dll
          asset_name: libtext_ext-x86_64-pc-windows-gnu.dll
          asset_content_type: application/x-sharedlib
